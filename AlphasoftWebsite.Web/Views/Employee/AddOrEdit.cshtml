@using System.Configuration
@model AlphasoftWebsite.Core.Model.Employee
@{
    ViewBag.Title = "AddOrEdit";
    Layout = null;
}
@{
    var imagestring = ConfigurationManager.AppSettings["EmployeeImage"];
}
@using (Html.BeginForm("AddOrEdit", "Employee", FormMethod.Post, new { enctype = "multipart/form-data", onSubmit = "return jQueryAjaxPost(this);", data_restUrl = Url.Action("AddOrEdit", "Employee", new { id = 0 }) }))//data-reset
{
    @Html.AntiForgeryToken()
    <section class="content">
        <div class="row">
            <div class="col-md-12">
                <div class="box box-info">
                    <div class="box-header">
                        <h3 class="box-title">
                            Employee
                        </h3>
                        <hr />
                        <div class="form-horizontal">
                            @Html.ValidationSummary(true)
                            @Html.HiddenFor(model => model.EmployeeId, new { id = "modelEmployeeId" })
                            @Html.HiddenFor(model => model.CreatedDate)
                            @Html.HiddenFor(model => model.EmployeeImage, new { id="modelEmployeeImage"})
                            @Html.HiddenFor(model => model.CreatedBy)

                            <input type="hidden" id="hiddenEmployeeId" />
                            <div class="col-md-6">

                                <div class="form-group">
                                    @Html.LabelFor(model => model.EmployeeName, "Employee Name", new { @class = "control-label col-md-6" })
                                    <div class="col-md-6">
                                        @Html.EditorFor(model => model.EmployeeName, new { htmlAttributes = new { @class = "form-control", @id = "EName", @maxLength = "50" } })
                                        @Html.ValidationMessageFor(model => model.EmployeeName)
                                    </div>
                                </div>

                                <div class="form-group">
                                    @Html.LabelFor(model => model.EmployeeAddress, "Address", new { @class = "control-label col-md-6" })
                                    <div class="col-md-6">
                                        @Html.EditorFor(model => model.EmployeeAddress, new { htmlAttributes = new { @class = "form-control", @id = "EAddress", @maxLength = "150" } })
                                        @Html.ValidationMessageFor(model => model.EmployeeAddress)
                                    </div>
                                </div>

                                <div class="form-group">
                                    <label class="control-label col-md-6">Designation</label>
                                    <div class="col-md-6">
                                        <select id="ddlDesignation" name="DesignationId" class="form-control select2" style="width: 76%">
                                            <option></option>
                                        </select>
                                    </div>
                                </div>

                                <div class="form-group">
                                    @Html.LabelFor(model => model.IsActive, "Is Active", new { @class = "control-label col-md-6" })
                                    <div class="col-md-6">
                                        @Html.CheckBoxFor(model => model.IsActive, new { htmlAttributes = new { @class = "form-control" } })
                                        @Html.ValidationMessageFor(model => model.IsActive)
                                    </div>
                                </div>

                                <div class="form-group">
                                    <div class="col-md-offset-6 col-md-6">
                                        <input type="submit" value="Submit" class="btn btn-success" />
                                        @if (Model.EmployeeId != 0)
                                        {
                                            <a class="btn btn-default" onclick="refreshAddNewTab('@Url.Action("AddOrEdit","Employee",new{id=0})', false)"><i class="fa fa-plus"></i> Add New</a>
                                        }
                                    </div>
                                </div>
                            </div>
                            <div class="col-md-6">
                                <div class="form-group">
                                    @Html.LabelFor(model => model.EmployeeImage, "Image", new { @class = "control-label col-md-1" })
                                    <div class="col-md-6">
                                        @if (Model.EmployeeImage != null)
                                        {
                                            string image = imagestring + Model.EmployeeImage;
                                            <img src="@Url.Content(image)" style="margin: 10px" height="200" width="200" id="previewImage" />
                                        }
                                        else

                                        {
                                            <img src="@Url.Content("../../Image/Employee/UserImage.jpg")" style="margin: 10px" height="100" width="100" id="previewImage" />
                                        }
                                        <input type="file" id="eImage" name="uploadedFile" accept="image/jpeg, image/png" onchange="ShowImagePreview(this, document.getElementById('previewImage'))" />

                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </section>
}



